openapi: 3.0.0
info:
  title: Blog Post API
  version: 1.0.0
servers:
  - url: 'https://localhost:8080/api/v1'

paths:
  /posts:
    get:
      summary: Retrieve a list of all blog posts.
      responses:
        200:
          description: A list of blog posts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlogPost'
    post:
      summary: Create a new blog post.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
      responses:
        201:
          description: Blog post created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        400:
          description: Post validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"

  /posts/{id}:
    get:
      summary: Retrieve details of a specific blog post.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int
      responses:
        200:
          description: Details of a blog post.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        404:
          description: Blog post not found.
    put:
      summary: Update an existing blog post.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
      responses:
        200:
          description: Blog post updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        404:
          description: Blog post not found.
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"
    delete:
      summary: Delete a blog post.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int
      responses:
        204:
          description: Blog post deleted successfully.
        404:
          description: Blog post not found.


components:
  schemas:
    BlogPost:
      type: object
      properties:
        id:
          type: integer
          format: int
          description: Unique identifier for the blog post.
        title:
          type: string
          description: Title of the blog post.
        content:
          type: string
          description: Content of the blog post.
        author:
          type: string
          description: Author of the blog post.
      required:
        - title
        - content
        - author

    GeneralError:
      type: object
      properties:
        error_message:
          type: string
      required:
        - error_message